sh: clang-format: nie znaleziono polecenia
Bundlex: Building natives: ocv
:dist
:register
:register
:register
:register
:register
"stream"
"stream"
"stream"
"stream"
"stream"
"stream"
67
107
99
195
141
156
238
124
122
128
112
104
112
150
157
92
127
129
93
127
115
138
117
122
115
124
114
129
119
133
120
113
119
118
81
117
128
69
59
99
96
105
143
100
75
59
68
90
69
75
147
91
103
147
97
58
50
48
54
61
101
104
104
119
80
48
33
37
28
62
99
109
123
84
54
51
38
29
29
66
118
88
109
100
52
43
32
26
32
66
126
132
116
58
47
46
37
27
27
44
124
143
88
105
49
40
31
32
25
52
105
103
87
86
59
48
36
25
23
46
118
100
112
96
35
43
31
23
25
57
119
113
104
93
47
36
23
26
25
50
115
108
101
93
45
42
25
26
24
57
77
103
95
93
90
46
27
25
25
50
107
122
102
92
64
26
27
25
24
52
76
106
87
92
61
45
46
35
26
58
89
84
105
93
104
26
25
25
24
58
109
117
113
89
64
36
31
31
27
47
89
98
90
98
90
57
51
28
24
39
118
89
95
95
81
38
46
24
22
40
97
130
86
99
80
49
27
23
26
46
95
102
103
98
67
69
40
30
24
50
120
102
107
99
59
47
34
26
28
53
131
126
93
83
52
40
45
41
26
62
89
92
114
114
95
44
28
26
24
59
83
105
109
111
74
42
25
25
26
63
109
90
99
91
74
37
26
26
26
51
118
102
115
86
54
34
25
25
25
60
81
133
113
93
34
34
27
25
27
50
128
106
100
100
40
26
27
23
24
62
78
74
78
94
94
51
36
25
23
57
125
44
100
107
64
40
35
30
24
49
88
76
96
113
74
38
25
23
23
42
92

02:51:38.382 [error] GenServer #PID<0.280.0> terminating
** (stop) {:error, {:cannot_handle_message, {:input_buf, [toilet: :too_many_buffers]}, [message: {Membrane.Core.Message, :buffer, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 33849}, payload: <<128, 224, 30, 156, 69, 8, 250, 23, 131, 225, 41, 113, 1, 159, 47, 106, 87, 50, 156, 46, 54, 157, 62, 44, 137, 218, 226, 102, 49, 75, 85, 6, 17, 211, 220, 155, 9, 128, ...>>}], [for_pad: :input]}, mode: :info]}}
Last message: {Membrane.Core.Message, :buffer, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 33849}, payload: <<128, 224, 30, 156, 69, 8, 250, 23, 131, 225, 41, 113, 1, 159, 47, 106, 87, 50, 156, 46, 54, 157, 62, 44, 137, 218, 226, 102, 49, 75, 85, 6, 17, 211, 220, 155, 9, 128, 187, 104, 238, 18, 30, 31, ...>>}], [for_pad: :input]}
State: %Membrane.Core.Element.State{controlling_pid: #PID<0.275.0>, delayed_demands: %{}, internal_state: %Membrane.RTP.Parser.State{payload_type: 96}, module: Membrane.RTP.Parser, name: {:rtp_parser, #Reference<0.532166885.255066114.89279>}, pads: %{data: %{input: %Membrane.Pad.Data{accepted_caps: :any, availability: :always, bin?: false, caps: nil, demand: 0, demand_unit: :buffers, direction: :input, end_of_stream?: false, input_buf: %Membrane.Core.InputBuffer{current_size: 499, demand: 3900, metric: Membrane.Buffer.Metric.Count, min_demand: 10, name: {:rtp_parser, #Reference<0.532166885.255066114.89279>}, preferred_size: 40, q: #Qex<[{:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 54738}, payload: <<128, 224, 113, 249, 104, 55, 201, 46, 181, 208, 131, 126, 1, 158, 63, 106, 87, 140, 34, 113, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 33849}, payload: <<128, 224, 30, 70, 69, 8, 250, 23, 131, 225, 41, 113, 1, 158, 63, 106, 87, 140, 34, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 56935}, payload: <<128, 224, 79, 184, 191, 124, 165, 95, 151, 226, 62, 215, 65, 158, 64, 69, 21, 44, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 51029}, payload: <<128, 224, 71, 212, 83, 203, 11, 16, 61, 254, 165, 161, 1, 158, 63, 106, 87, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 38639}, payload: <<128, 224, 36, 225, 92, 119, 201, 25, 245, 127, 65, 24, 65, 158, 64, 69, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 37166}, payload: <<128, 224, 4, 82, 25, 48, 32, 115, 172, 239, 190, 233, 65, 158, 64, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 54738}, payload: <<128, 224, 113, 250, 104, 55, 201, 46, 181, 208, 131, 126, 65, 154, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 33849}, payload: <<128, 224, 30, 71, 69, 8, 250, 23, 131, 225, 41, 113, 65, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 56935}, payload: <<128, 224, 79, 185, 191, 124, 165, 95, 151, 226, 62, 215, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 51029}, payload: <<128, 224, 71, 213, 83, 203, 11, 16, 61, 254, 165, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 38639}, payload: <<128, 224, 36, 226, 92, 119, 201, 25, 245, 127, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 37166}, payload: <<128, 224, 4, 83, 25, 48, 32, 115, 172, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 54738}, payload: <<128, 224, 113, 251, 104, 55, 201, 46, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 33849}, payload: <<128, 224, 30, 72, 69, 8, 250, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 56935}, payload: <<128, 224, 79, 186, 191, 124, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 51029}, payload: <<128, 224, 71, 214, 83, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, 1}, udp_source_port: 38639}, payload: <<128, 224, 36, 227, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, 0, ...}, udp_source_port: 37166}, payload: <<128, 224, 4, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, 0, ...}, udp_source_port: 54738}, payload: <<128, 224, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {127, ...}, udp_source_port: 33849}, payload: <<128, ...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{udp_source_address: {...}, ...}, payload: <<...>>}], 1}, {:buffers, [%Membrane.Buffer{metadata: %{...}, ...}], 1}, {:buffers, [%Membrane.Buffer{...}], 1}, {:buffers, [...], ...}, {:buffers, ...}, {...}, ...]>, toilet?: true, toilet_props: %{fail: 500, warn: 250}}, mode: :pull, name: :input, options: nil, other_demand_unit: nil, other_ref: {Membrane.Pad, {:private, :input}, #Reference<0.532166885.255066114.89279>}, pid: #PID<0.275.0>, ref: :input, start_of_stream?: true, sticky_messages: []}, output: %Membrane.Pad.Data{accepted_caps: Membrane.RTP, availability: :always, bin?: false, caps: %Membrane.RTP{payload_type: 96}, demand: 0, demand_unit: nil, direction: :output, end_of_stream?: false, input_buf: nil, mode: :pull, name: :output, options: nil, other_demand_unit: :buffers, other_ref: {Membrane.Pad, :input, #Reference<0.532166885.255066114.89326>}, pid: #PID<0.276.0>, ref: :output, start_of_stream?: false, sticky_messages: nil}}, dynamic_currently_linking: [], info: %{}}, parent_monitor: #Reference<0.532166885.255066114.89320>, playback: %Membrane.Core.Playback{async_state_change: false, pending_state: nil, state: :playing, target_state: :playing}, playback_buffer: %Membrane.Core.Element.PlaybackBuffer{q: #Qex<[]>}, synchronization: %{clock: nil, latency: 0, parent_clock: nil, stream_sync: :membrane_no_sync, timers: %{}}, type: :filter, watcher: #PID<0.275.0>}
[85, 115, 116, 97, 119, 105, 97, 110, 105, 101, 32, 112, 111, 116, 111, 107,
 117, 32, 110, 97, 32, 80, 65, 85, 90, 79, 87, 65, 78, 73, 69, 46, 46, 46, 10,
 80, 111, 116, 111, 107, 32, 106, 101, 115, 116, 32, 80, 82, 90, 69, ...]
